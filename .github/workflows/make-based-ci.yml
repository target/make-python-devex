name: make python devex basics

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

permissions: {}

jobs:
  poetry-checks:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      with:
        persist-credentials: false
    # This will post a comment on PRs when poetry.lock changes
    - name: Diff poetry.lock
      uses: nborrmann/diff-poetry-lock@c0afd3666864cec339f03ee5c5cf9cb671780c12


  build:
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-15
          - macos-14
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v4
      with:
        persist-credentials: false

    - name: Set up Homebrew
      id: set-up-homebrew
      uses: Homebrew/actions/setup-homebrew@7f6df1cd36597249cbf9810ff3aeff47edf8243b

    - name: Add Poetry and pyenv setup
      run: |
        echo 'export PYENV_ROOT="$HOME/.pyenv"' | tee -a ~/.zshrc | tee -a ~/.bashrc | tee -a ~/.profile
        echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' | tee -a ~/.zshrc | tee -a ~/.bashrc | tee -a ~/.profile
        echo 'eval "$(pyenv init -)"' | tee -a ~/.zshrc | tee -a ~/.bashrc | tee -a ~/.profile
        (
        	echo
        	echo 'if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi'
        ) | tee -a ~/.zshrc | tee -a ~/.bashrc | tee -a ~/.profile
        echo 'export PATH="${HOME}/.local/bin:$PATH"' | tee -a ~/.zshrc | tee -a ~/.bashrc | tee -a ~/.profile

    - name: Install dependencies initially
      shell: "bash --login -eo pipefail {0}"
      env:
        # Force overwriting during tests since a human cannot intervene
        # Do not upgrade dependents unless we have to
        BREW_BUNDLE_OPTS: --force --no-upgrade
      # Have to run it twice because of some dependencies
      # installed but not usable the first time.
      run: make deps || true

    - name: Show program paths
      shell: "bash --login -eo pipefail {0}"
      run: |
        echo "${PATH}"
        command -v pyenv || true
        command -v poetry || true
        command -v python3 || true

    - name: Install dependencies after installing some dependencies
      shell: "bash --login -eo pipefail {0}"
      env:
        # See above for an explanation of these options.
        BREW_BUNDLE_OPTS: --force --no-upgrade
      run: make deps

    - name: Run check
      shell: "bash --login -eo pipefail {0}"
      run: make check

    - name: Run tests
      shell: "bash --login -eo pipefail {0}"
      run: make test

    - name: Run build
      shell: "bash --login -eo pipefail {0}"
      run: make build
