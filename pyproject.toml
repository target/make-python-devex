[project]
authors = [
    {name = "Colin Dean", email = "c.o.l.i.n.d.e.a.n@example.com"},
]
license = {text = "CC0"}
requires-python = "<3.14,>=3.9"
dependencies = [
    "retry2<1.0,>=0.9",
    "deprecated<2.0,>=1.2",
    "loguru",
]
name = "example"
version = "0.0.0"
description = "This is a demonstration of the Make Python Devex concept project"
readme = "README.md"

[project.scripts]
example-make-python-devex = "example:main"

[dependency-groups]
dev = [
    "pytest<9,>=8",
    "pytest-html",
    "ansi2html",
    "pytest-tap",
    "pytest-cov",
    "black>=22",
    "mypy[faster-cache]",
    "lxml",
    "ruff",
    "peru",
    "types-Deprecated",
    "types-retry",
]


[tool.uv]
package = true

[tool.uv.workspace]
members = ["example"]

###
# Below here are rarely-touched settings for the various tools used in this project.
# N.b. Change the Python versions below when changing tool.poetry.dependencies.python above.
###

[tool.black]
# 119 = GitHub's wrapping limit
line-length = 119
target-version = ['py313']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "unittest: marks tests as unit tests (deselect with '-m \"not unittest\"')"
]
minversion = "7.0"
testpaths = ["tests"]
# -vvvv = as verbose as it gets
# -ra = show extra test summary for all except passed
# coverage options passed via pytest-cov and reporting output in HTML, JUNIT, and TAP form
addopts = """
    -vvvv -r A --quiet \
    --cov --cov-report xml --cov-report html --cov-report term \
    --junit-xml=build/report.junit.xml --html=build/report.html --self-contained-html \
    --tap-outdir=build --tap-combined \
    --durations=10
"""

# Configure coverage.py, which is enabled in the pytest addopts above
[tool.coverage.run]
branch = true
[tool.coverage.report]
skip_empty = true
[tool.coverage.html]
directory = "build/coverage"
[tool.coverage.xml]
output = "build/coverage/coverage.xml"
[tool.coverage.paths]
source = ["example"]

[tool.ruff]
# Same as Black.
line-length = 119
target-version = "py313"
exclude = [".*", "dist", "__pypackages__", "build", "venv"]
